/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthLayoutImport } from './routes/auth/_layout'
import { Route as dashboardLayoutImport } from './routes/(dashboard)/_layout'
import { Route as dashboardLayoutIndexImport } from './routes/(dashboard)/_layout/index'
import { Route as AuthLayoutSignInImport } from './routes/auth/_layout/sign-in'
import { Route as dashboardLayoutStorageImport } from './routes/(dashboard)/_layout/storage'
import { Route as dashboardLayoutPlayerImport } from './routes/(dashboard)/_layout/player'
import { Route as dashboardLayoutAssetsImport } from './routes/(dashboard)/_layout/assets'
import { Route as dashboardLayoutApiImport } from './routes/(dashboard)/_layout/api'
import { Route as dashboardLayoutJobsIndexImport } from './routes/(dashboard)/_layout/jobs/index'
import { Route as dashboardLayoutJobsIdImport } from './routes/(dashboard)/_layout/jobs/$id'

// Create Virtual Routes

const AuthImport = createFileRoute('/auth')()
const dashboardImport = createFileRoute('/(dashboard)')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const dashboardRoute = dashboardImport.update({
  id: '/(dashboard)',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthRoute,
} as any)

const dashboardLayoutRoute = dashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => dashboardRoute,
} as any)

const dashboardLayoutIndexRoute = dashboardLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => dashboardLayoutRoute,
} as any)

const AuthLayoutSignInRoute = AuthLayoutSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const dashboardLayoutStorageRoute = dashboardLayoutStorageImport.update({
  id: '/storage',
  path: '/storage',
  getParentRoute: () => dashboardLayoutRoute,
} as any)

const dashboardLayoutPlayerRoute = dashboardLayoutPlayerImport.update({
  id: '/player',
  path: '/player',
  getParentRoute: () => dashboardLayoutRoute,
} as any)

const dashboardLayoutAssetsRoute = dashboardLayoutAssetsImport.update({
  id: '/assets',
  path: '/assets',
  getParentRoute: () => dashboardLayoutRoute,
} as any)

const dashboardLayoutApiRoute = dashboardLayoutApiImport.update({
  id: '/api',
  path: '/api',
  getParentRoute: () => dashboardLayoutRoute,
} as any)

const dashboardLayoutJobsIndexRoute = dashboardLayoutJobsIndexImport.update({
  id: '/jobs/',
  path: '/jobs/',
  getParentRoute: () => dashboardLayoutRoute,
} as any)

const dashboardLayoutJobsIdRoute = dashboardLayoutJobsIdImport.update({
  id: '/jobs/$id',
  path: '/jobs/$id',
  getParentRoute: () => dashboardLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(dashboard)': {
      id: '/(dashboard)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/_layout': {
      id: '/(dashboard)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardLayoutImport
      parentRoute: typeof dashboardRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_layout': {
      id: '/auth/_layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof AuthRoute
    }
    '/(dashboard)/_layout/api': {
      id: '/(dashboard)/_layout/api'
      path: '/api'
      fullPath: '/api'
      preLoaderRoute: typeof dashboardLayoutApiImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/assets': {
      id: '/(dashboard)/_layout/assets'
      path: '/assets'
      fullPath: '/assets'
      preLoaderRoute: typeof dashboardLayoutAssetsImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/player': {
      id: '/(dashboard)/_layout/player'
      path: '/player'
      fullPath: '/player'
      preLoaderRoute: typeof dashboardLayoutPlayerImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/storage': {
      id: '/(dashboard)/_layout/storage'
      path: '/storage'
      fullPath: '/storage'
      preLoaderRoute: typeof dashboardLayoutStorageImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/auth/_layout/sign-in': {
      id: '/auth/_layout/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthLayoutSignInImport
      parentRoute: typeof AuthLayoutImport
    }
    '/(dashboard)/_layout/': {
      id: '/(dashboard)/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardLayoutIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/jobs/$id': {
      id: '/(dashboard)/_layout/jobs/$id'
      path: '/jobs/$id'
      fullPath: '/jobs/$id'
      preLoaderRoute: typeof dashboardLayoutJobsIdImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/jobs/': {
      id: '/(dashboard)/_layout/jobs/'
      path: '/jobs'
      fullPath: '/jobs'
      preLoaderRoute: typeof dashboardLayoutJobsIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface dashboardLayoutRouteChildren {
  dashboardLayoutApiRoute: typeof dashboardLayoutApiRoute
  dashboardLayoutAssetsRoute: typeof dashboardLayoutAssetsRoute
  dashboardLayoutPlayerRoute: typeof dashboardLayoutPlayerRoute
  dashboardLayoutStorageRoute: typeof dashboardLayoutStorageRoute
  dashboardLayoutIndexRoute: typeof dashboardLayoutIndexRoute
  dashboardLayoutJobsIdRoute: typeof dashboardLayoutJobsIdRoute
  dashboardLayoutJobsIndexRoute: typeof dashboardLayoutJobsIndexRoute
}

const dashboardLayoutRouteChildren: dashboardLayoutRouteChildren = {
  dashboardLayoutApiRoute: dashboardLayoutApiRoute,
  dashboardLayoutAssetsRoute: dashboardLayoutAssetsRoute,
  dashboardLayoutPlayerRoute: dashboardLayoutPlayerRoute,
  dashboardLayoutStorageRoute: dashboardLayoutStorageRoute,
  dashboardLayoutIndexRoute: dashboardLayoutIndexRoute,
  dashboardLayoutJobsIdRoute: dashboardLayoutJobsIdRoute,
  dashboardLayoutJobsIndexRoute: dashboardLayoutJobsIndexRoute,
}

const dashboardLayoutRouteWithChildren = dashboardLayoutRoute._addFileChildren(
  dashboardLayoutRouteChildren,
)

interface dashboardRouteChildren {
  dashboardLayoutRoute: typeof dashboardLayoutRouteWithChildren
}

const dashboardRouteChildren: dashboardRouteChildren = {
  dashboardLayoutRoute: dashboardLayoutRouteWithChildren,
}

const dashboardRouteWithChildren = dashboardRoute._addFileChildren(
  dashboardRouteChildren,
)

interface AuthLayoutRouteChildren {
  AuthLayoutSignInRoute: typeof AuthLayoutSignInRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutSignInRoute: AuthLayoutSignInRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface AuthRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof dashboardLayoutIndexRoute
  '/auth': typeof AuthLayoutRouteWithChildren
  '/api': typeof dashboardLayoutApiRoute
  '/assets': typeof dashboardLayoutAssetsRoute
  '/player': typeof dashboardLayoutPlayerRoute
  '/storage': typeof dashboardLayoutStorageRoute
  '/auth/sign-in': typeof AuthLayoutSignInRoute
  '/jobs/$id': typeof dashboardLayoutJobsIdRoute
  '/jobs': typeof dashboardLayoutJobsIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthLayoutRouteWithChildren
  '/api': typeof dashboardLayoutApiRoute
  '/assets': typeof dashboardLayoutAssetsRoute
  '/player': typeof dashboardLayoutPlayerRoute
  '/storage': typeof dashboardLayoutStorageRoute
  '/auth/sign-in': typeof AuthLayoutSignInRoute
  '/': typeof dashboardLayoutIndexRoute
  '/jobs/$id': typeof dashboardLayoutJobsIdRoute
  '/jobs': typeof dashboardLayoutJobsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(dashboard)': typeof dashboardRouteWithChildren
  '/(dashboard)/_layout': typeof dashboardLayoutRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/auth/_layout': typeof AuthLayoutRouteWithChildren
  '/(dashboard)/_layout/api': typeof dashboardLayoutApiRoute
  '/(dashboard)/_layout/assets': typeof dashboardLayoutAssetsRoute
  '/(dashboard)/_layout/player': typeof dashboardLayoutPlayerRoute
  '/(dashboard)/_layout/storage': typeof dashboardLayoutStorageRoute
  '/auth/_layout/sign-in': typeof AuthLayoutSignInRoute
  '/(dashboard)/_layout/': typeof dashboardLayoutIndexRoute
  '/(dashboard)/_layout/jobs/$id': typeof dashboardLayoutJobsIdRoute
  '/(dashboard)/_layout/jobs/': typeof dashboardLayoutJobsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/api'
    | '/assets'
    | '/player'
    | '/storage'
    | '/auth/sign-in'
    | '/jobs/$id'
    | '/jobs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/api'
    | '/assets'
    | '/player'
    | '/storage'
    | '/auth/sign-in'
    | '/'
    | '/jobs/$id'
    | '/jobs'
  id:
    | '__root__'
    | '/(dashboard)'
    | '/(dashboard)/_layout'
    | '/auth'
    | '/auth/_layout'
    | '/(dashboard)/_layout/api'
    | '/(dashboard)/_layout/assets'
    | '/(dashboard)/_layout/player'
    | '/(dashboard)/_layout/storage'
    | '/auth/_layout/sign-in'
    | '/(dashboard)/_layout/'
    | '/(dashboard)/_layout/jobs/$id'
    | '/(dashboard)/_layout/jobs/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  dashboardRoute: typeof dashboardRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  dashboardRoute: dashboardRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(dashboard)",
        "/auth"
      ]
    },
    "/(dashboard)": {
      "filePath": "(dashboard)",
      "children": [
        "/(dashboard)/_layout"
      ]
    },
    "/(dashboard)/_layout": {
      "filePath": "(dashboard)/_layout.tsx",
      "parent": "/(dashboard)",
      "children": [
        "/(dashboard)/_layout/api",
        "/(dashboard)/_layout/assets",
        "/(dashboard)/_layout/player",
        "/(dashboard)/_layout/storage",
        "/(dashboard)/_layout/",
        "/(dashboard)/_layout/jobs/$id",
        "/(dashboard)/_layout/jobs/"
      ]
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_layout"
      ]
    },
    "/auth/_layout": {
      "filePath": "auth/_layout.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_layout/sign-in"
      ]
    },
    "/(dashboard)/_layout/api": {
      "filePath": "(dashboard)/_layout/api.tsx",
      "parent": "/(dashboard)/_layout"
    },
    "/(dashboard)/_layout/assets": {
      "filePath": "(dashboard)/_layout/assets.tsx",
      "parent": "/(dashboard)/_layout"
    },
    "/(dashboard)/_layout/player": {
      "filePath": "(dashboard)/_layout/player.tsx",
      "parent": "/(dashboard)/_layout"
    },
    "/(dashboard)/_layout/storage": {
      "filePath": "(dashboard)/_layout/storage.tsx",
      "parent": "/(dashboard)/_layout"
    },
    "/auth/_layout/sign-in": {
      "filePath": "auth/_layout/sign-in.tsx",
      "parent": "/auth/_layout"
    },
    "/(dashboard)/_layout/": {
      "filePath": "(dashboard)/_layout/index.tsx",
      "parent": "/(dashboard)/_layout"
    },
    "/(dashboard)/_layout/jobs/$id": {
      "filePath": "(dashboard)/_layout/jobs/$id.tsx",
      "parent": "/(dashboard)/_layout"
    },
    "/(dashboard)/_layout/jobs/": {
      "filePath": "(dashboard)/_layout/jobs/index.tsx",
      "parent": "/(dashboard)/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
